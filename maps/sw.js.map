{"version":3,"sources":["sw.js"],"names":["precacheConfig","cacheName","self","registration","scope","firstRegister","ignoreUrlParametersMatching","addDirectoryIndex","originalUrl","index","url","URL","pathname","slice","toString","cleanResponse","originalResponse","redirected","Promise","resolve","body","blob","then","Response","headers","status","statusText","createCacheKey","paramName","paramValue","dontCacheBustUrlsMatching","match","search","encodeURIComponent","isPathWhitelisted","whitelist","absoluteUrlString","length","path","some","whitelistedPathRegex","stripIgnoredUrlParameters","hash","split","map","kv","filter","every","ignoredRegex","test","join","hashParamName","urlsToCacheKeys","Map","item","relativeUrl","absoluteUrl","location","cacheKey","setOfCachedUrls","cache","keys","requests","request","urls","Set","addEventListener","event","waitUntil","caches","open","cachedUrls","all","Array","from","values","has","Request","credentials","fetch","response","ok","Error","responseToCache","put","skipWaiting","setOfExpectedUrls","existingRequests","existingRequest","clients","claim","matchAll","forEach","client","postMessage","method","shouldRespond","directoryIndex","respondWith","get","e","console","warn"],"mappings":"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","file":"../sw.js","sourcesContent":["/**\n * 自动引入模板，在原有 sw-precache 插件默认模板基础上做的二次开发\n *\n * 因为是自定导入的模板，项目一旦生成，不支持随 sw-precache 的版本自动升级。\n * 可以到 Lavas 官网下载 basic 模板内获取最新模板进行替换\n *\n */\n\n/* eslint-disable */\n\n'use strict';\n\nvar precacheConfig = [[\"/ChuBaiWarmlight/2023/12/25/CSS/BFC/index.html\",\"e72089d9d6e879fc1ee3f7014d4efd76\"],[\"/ChuBaiWarmlight/2023/12/25/CSS/CSS单位居中/index.html\",\"488853210b55b83b38fe5e236a0d4e3f\"],[\"/ChuBaiWarmlight/2023/12/25/CSS/渐变式渲染/index.html\",\"263c5e54c6047c707ee3a8de146951eb\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/HTML面试汇总/index.html\",\"b2ca8ecc3fa059f3142a91e8e84d5fab\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/document-declaration/index.html\",\"76aee37f6389123e08e02ce2c597c05d\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/iframe/index.html\",\"7d32fc22c8a2def79f254f2508e7ede7\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/semanticization/index.html\",\"3035b2d3204f1b7707dcd1a084eb4fa6\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/微格式/index.html\",\"deef676e56653b73875f5820b5b9f409\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/替换元素/index.html\",\"d1c20ed314795974107f8bc702271d83\"],[\"/ChuBaiWarmlight/2023/12/25/HTML/页面可见性/index.html\",\"4af247d88235be023850a4bfcb414f6f\"],[\"/ChuBaiWarmlight/2024/09/09/HTML/SEO/index.html\",\"f36a46a93b129e39f208c2cd8d6a6511\"],[\"/ChuBaiWarmlight/2024/09/09/HTML/w3c/index.html\",\"6884038ead4752505dcc163bf30a9d42\"],[\"/ChuBaiWarmlight/404.html\",\"39a8b11288a993534a22ec80670dd0b9\"],[\"/ChuBaiWarmlight/about/index.html\",\"d789eeddef49d6d13757141bbabf8d26\"],[\"/ChuBaiWarmlight/archives/2023/12/index.html\",\"23464cf25235f62f446e056517e70c57\"],[\"/ChuBaiWarmlight/archives/2023/index.html\",\"46e35ea41e81592089378075eb4bb8bf\"],[\"/ChuBaiWarmlight/archives/2024/09/index.html\",\"a727e52eb72beb1605a293bf4939695e\"],[\"/ChuBaiWarmlight/archives/2024/index.html\",\"536609ce41ab07bd072704104a383d01\"],[\"/ChuBaiWarmlight/archives/index.html\",\"6e4b90c135f5854024c40c7990c00481\"],[\"/ChuBaiWarmlight/archives/page/2/index.html\",\"2bfd23fbcbe8a552fb667fe524d33c41\"],[\"/ChuBaiWarmlight/categories/index.html\",\"16ebd3529b789ca673dd1e4a1f616f1b\"],[\"/ChuBaiWarmlight/categories/前端/CSS/index.html\",\"45d9ed07d28f2220fe87594f5e401a66\"],[\"/ChuBaiWarmlight/categories/前端/HTML/index.html\",\"c8160f5d64b9ab1cf61ffae6dffd02ef\"],[\"/ChuBaiWarmlight/categories/前端/index.html\",\"9fa34b8d6b5a757c5473e457c047f8a2\"],[\"/ChuBaiWarmlight/categories/前端/page/2/index.html\",\"e8ed4fcec8ec483b9deeb4722c2c1a83\"],[\"/ChuBaiWarmlight/css/Readme.html\",\"c1421c18e077ab9a9582161d9197e693\"],[\"/ChuBaiWarmlight/css/first.css\",\"9ad7cba7599180e483f53e6b455cfbae\"],[\"/ChuBaiWarmlight/css/index.css\",\"c608329e4a61dd5d364d923dff7b2ffd\"],[\"/ChuBaiWarmlight/css/style.css\",\"da58bd10571a0aec0a34b3f8f48274b5\"],[\"/ChuBaiWarmlight/images/about/img.jpg\",\"fc81b480a0b792980e904dae2cda891a\"],[\"/ChuBaiWarmlight/images/article-avatar.jpg\",\"42e2f6e669dd6744aab6adcbe79bfe00\"],[\"/ChuBaiWarmlight/images/background.png\",\"be770663911c26cac9cf573cbe08ebed\"],[\"/ChuBaiWarmlight/images/friends/chubai.png\",\"ea8be496de0bafa616663d863c7a383b\"],[\"/ChuBaiWarmlight/images/photo/chongqing/IMG_20230705_180439.jpg\",\"5b233533363a614f03564b56eaff34d7\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img.png\",\"594194538acefb5edbaa751240ec3f7b\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_1.png\",\"3b5755b1348de725033cab72f5ecb415\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_2.png\",\"b5b8c205a06e65c3a716f9f0f2a62877\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_3.png\",\"6c97e5270677da5bfba07af4d208e528\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_4.png\",\"092c8ecfd294be0a5f43db021279143b\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_5.png\",\"850c56a40f764de21d0294f29c739218\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_6.png\",\"4d311a0fb71bdc78c27702d5c7326590\"],[\"/ChuBaiWarmlight/images/photo/chongqing/img_7.png\",\"ae38ccc3cbae203d46b16e3495c1a627\"],[\"/ChuBaiWarmlight/images/qrcode/QQ.jpg\",\"cefe819eca28e02803230c6f58883084\"],[\"/ChuBaiWarmlight/images/qrcode/weixin.jpg\",\"ee354873a4620c28d87646288de4d98f\"],[\"/ChuBaiWarmlight/index.html\",\"62748573739752e9789a98d0c1fba370\"],[\"/ChuBaiWarmlight/js/app.js\",\"7a2c825eba3f2495f5c0f48cbe70482e\"],[\"/ChuBaiWarmlight/js/plugins/aplayer.js\",\"dbe5eea968969672c52022ed895192a0\"],[\"/ChuBaiWarmlight/js/plugins/parallax.js\",\"8bf0ab10d50243ae87016af576642cdc\"],[\"/ChuBaiWarmlight/js/plugins/rightMenu.js\",\"d9437285263079b1158df42384235b71\"],[\"/ChuBaiWarmlight/js/plugins/rightMenus.js\",\"80d861b1e0937ebecf188793f3705a3a\"],[\"/ChuBaiWarmlight/js/plugins/tags/contributors.js\",\"aec8045335d2753a39a48c34fb019662\"],[\"/ChuBaiWarmlight/js/plugins/tags/friends.js\",\"f372da57b83083859f60ce19b736a695\"],[\"/ChuBaiWarmlight/js/plugins/tags/sites.js\",\"76bf19b80414fbce774acddabf6b1d3e\"],[\"/ChuBaiWarmlight/js/search/hexo.js\",\"8594665377e48c3b406b0149264ebf2d\"],[\"/ChuBaiWarmlight/live2dw/lib/L2Dwidget.0.min.js\",\"32973883fcac0a9ae6cc79c0ea25fda2\"],[\"/ChuBaiWarmlight/live2dw/lib/L2Dwidget.min.js\",\"094cbace49a39548bed64abff5988b05\"],[\"/ChuBaiWarmlight/mylist/index.html\",\"ca77ee73cde7677308d163042fbcdab7\"],[\"/ChuBaiWarmlight/page/2/index.html\",\"2cc15fbe8849855649755d14a0322b20\"],[\"/ChuBaiWarmlight/photo/img.png\",\"431df857ddff1da10650b4cecf7159de\"],[\"/ChuBaiWarmlight/photo/index.html\",\"eceaf01b6cdd2dd762037c61f24a26fd\"],[\"/ChuBaiWarmlight/sw-register.js\",\"553f72d24be9da0b9e8eb692d352b36f\"],[\"/ChuBaiWarmlight/tags/CSS/index.html\",\"51aa2cd0e404d1312663fe7c582fd68f\"],[\"/ChuBaiWarmlight/tags/HTML/index.html\",\"483346b552b36db597bc89bf28df12cb\"],[\"/ChuBaiWarmlight/tags/index.html\",\"48a2bb1b3a388896230491c636091851\"]];\nvar cacheName = 'sw-precache-v3--' + (self.registration ? self.registration.scope : '');\nvar firstRegister = 1; // 默认1是首次安装SW， 0是SW更新\n\n\nvar ignoreUrlParametersMatching = [/^utm_/];\n\n\nvar addDirectoryIndex = function (originalUrl, index) {\n    var url = new URL(originalUrl);\n    if (url.pathname.slice(-1) === '/') {\n        url.pathname += index;\n    }\n    return url.toString();\n};\n\nvar cleanResponse = function (originalResponse) {\n    // 如果没有重定向响应，不需干啥\n    if (!originalResponse.redirected) {\n        return Promise.resolve(originalResponse);\n    }\n\n    // Firefox 50 及以下不知处 Response.body 流, 所以我们需要读取整个body以blob形式返回。\n    var bodyPromise = 'body' in originalResponse ?\n        Promise.resolve(originalResponse.body) :\n        originalResponse.blob();\n\n    return bodyPromise.then(function (body) {\n        // new Response() 可同时支持 stream or Blob.\n        return new Response(body, {\n            headers: originalResponse.headers,\n            status: originalResponse.status,\n            statusText: originalResponse.statusText\n        });\n    });\n};\n\nvar createCacheKey = function (originalUrl, paramName, paramValue,\n    dontCacheBustUrlsMatching) {\n\n    // 创建一个新的URL对象，避免影响原始URL\n    var url = new URL(originalUrl);\n\n    // 如果 dontCacheBustUrlsMatching 值没有设置，或是没有匹配到，将值拼接到url.serach后\n    if (!dontCacheBustUrlsMatching ||\n        !(url.pathname.match(dontCacheBustUrlsMatching))) {\n        url.search += (url.search ? '&' : '') +\n            encodeURIComponent(paramName) + '=' + encodeURIComponent(paramValue);\n    }\n\n    return url.toString();\n};\n\nvar isPathWhitelisted = function (whitelist, absoluteUrlString) {\n    // 如果 whitelist 是空数组，则认为全部都在白名单内\n    if (whitelist.length === 0) {\n        return true;\n    }\n\n    // 否则逐个匹配正则匹配并返回\n    var path = (new URL(absoluteUrlString)).pathname;\n    return whitelist.some(function (whitelistedPathRegex) {\n        return path.match(whitelistedPathRegex);\n    });\n};\n\nvar stripIgnoredUrlParameters = function (originalUrl,\n    ignoreUrlParametersMatching) {\n    var url = new URL(originalUrl);\n    // 移除 hash; 查看 https://github.com/GoogleChrome/sw-precache/issues/290\n    url.hash = '';\n\n    url.search = url.search.slice(1) // 是否包含 '?'\n        .split('&') // 分割成数组 'key=value' 的形式\n        .map(function (kv) {\n            return kv.split('='); // 分割每个 'key=value' 字符串成 [key, value] 形式\n        })\n        .filter(function (kv) {\n            return ignoreUrlParametersMatching.every(function (ignoredRegex) {\n                return !ignoredRegex.test(kv[0]); // 如果 key 没有匹配到任何忽略参数正则，就 Return true\n            });\n        })\n        .map(function (kv) {\n            return kv.join('='); // 重新把 [key, value] 格式转换为 'key=value' 字符串\n        })\n        .join('&'); // 将所有参数 'key=value' 以 '&' 拼接\n\n    return url.toString();\n};\n\n\nvar addDirectoryIndex = function (originalUrl, index) {\n    var url = new URL(originalUrl);\n    if (url.pathname.slice(-1) === '/') {\n        url.pathname += index;\n    }\n    return url.toString();\n};\n\nvar hashParamName = '_sw-precache';\nvar urlsToCacheKeys = new Map(\n    precacheConfig.map(function (item) {\n        var relativeUrl = item[0];\n        var hash = item[1];\n        var absoluteUrl = new URL(relativeUrl, self.location);\n        var cacheKey = createCacheKey(absoluteUrl, hashParamName, hash, false);\n        return [absoluteUrl.toString(), cacheKey];\n    })\n);\n\nfunction setOfCachedUrls(cache) {\n    return cache.keys().then(function (requests) {\n        // 如果原cacheName中没有缓存任何收，就默认是首次安装，否则认为是SW更新\n        if (requests && requests.length > 0) {\n            firstRegister = 0; // SW更新\n        }\n        return requests.map(function (request) {\n            return request.url;\n        });\n    }).then(function (urls) {\n        return new Set(urls);\n    });\n}\n\nself.addEventListener('install', function (event) {\n    event.waitUntil(\n        caches.open(cacheName).then(function (cache) {\n            return setOfCachedUrls(cache).then(function (cachedUrls) {\n                return Promise.all(\n                    Array.from(urlsToCacheKeys.values()).map(function (cacheKey) {\n                        // 如果缓存中没有匹配到cacheKey，添加进去\n                        if (!cachedUrls.has(cacheKey)) {\n                            var request = new Request(cacheKey, { credentials: 'same-origin' });\n                            return fetch(request).then(function (response) {\n                                // 只要返回200才能继续，否则直接抛错\n                                if (!response.ok) {\n                                    throw new Error('Request for ' + cacheKey + ' returned a ' +\n                                        'response with status ' + response.status);\n                                }\n\n                                return cleanResponse(response).then(function (responseToCache) {\n                                    return cache.put(cacheKey, responseToCache);\n                                });\n                            });\n                        }\n                    })\n                );\n            });\n        })\n            .then(function () {\n            \n            // 强制 SW 状态 installing -> activate\n            return self.skipWaiting();\n            \n        })\n    );\n});\n\nself.addEventListener('activate', function (event) {\n    var setOfExpectedUrls = new Set(urlsToCacheKeys.values());\n\n    event.waitUntil(\n        caches.open(cacheName).then(function (cache) {\n            return cache.keys().then(function (existingRequests) {\n                return Promise.all(\n                    existingRequests.map(function (existingRequest) {\n                        // 删除原缓存中相同键值内容\n                        if (!setOfExpectedUrls.has(existingRequest.url)) {\n                            return cache.delete(existingRequest);\n                        }\n                    })\n                );\n            });\n        }).then(function () {\n            \n            return self.clients.claim();\n            \n        }).then(function () {\n                // 如果是首次安装 SW 时, 不发送更新消息（是否是首次安装，通过指定cacheName 中是否有缓存信息判断）\n                // 如果不是首次安装，则是内容有更新，需要通知页面重载更新\n                if (!firstRegister) {\n                    return self.clients.matchAll()\n                        .then(function (clients) {\n                            if (clients && clients.length) {\n                                clients.forEach(function (client) {\n                                    client.postMessage('sw.update');\n                                })\n                            }\n                        })\n                }\n            })\n    );\n});\n\n\n\n    self.addEventListener('fetch', function (event) {\n        if (event.request.method === 'GET') {\n\n            // 是否应该 event.respondWith()，需要我们逐步的判断\n            // 而且也方便了后期做特殊的特殊\n            var shouldRespond;\n\n\n            // 首先去除已配置的忽略参数及hash\n            // 查看缓存简直中是否包含该请求，包含就将shouldRespond 设为true\n            var url = stripIgnoredUrlParameters(event.request.url, ignoreUrlParametersMatching);\n            shouldRespond = urlsToCacheKeys.has(url);\n\n            // 如果 shouldRespond 是 false, 我们在url后默认增加 'index.html'\n            // (或者是你在配置文件中自行配置的 directoryIndex 参数值)，继续查找缓存列表\n            var directoryIndex = 'index.html';\n            if (!shouldRespond && directoryIndex) {\n                url = addDirectoryIndex(url, directoryIndex);\n                shouldRespond = urlsToCacheKeys.has(url);\n            }\n\n            // 如果 shouldRespond 仍是 false，检查是否是navigation\n            // request， 如果是的话，判断是否能与 navigateFallbackWhitelist 正则列表匹配\n            var navigateFallback = '';\n            if (!shouldRespond &&\n                navigateFallback &&\n                (event.request.mode === 'navigate') &&\n                isPathWhitelisted([], event.request.url)\n            ) {\n                url = new URL(navigateFallback, self.location).toString();\n                shouldRespond = urlsToCacheKeys.has(url);\n            }\n\n            // 如果 shouldRespond 被置为 true\n            // 则 event.respondWith()匹配缓存返回结果，匹配不成就直接请求.\n            if (shouldRespond) {\n                event.respondWith(\n                    caches.open(cacheName).then(function (cache) {\n                        return cache.match(urlsToCacheKeys.get(url)).then(function (response) {\n                            if (response) {\n                                return response;\n                            }\n                            throw Error('The cached response that was expected is missing.');\n                        });\n                    }).catch(function (e) {\n                        // 如果捕获到异常错误，直接返回 fetch() 请求资源\n                        console.warn('Couldn\\'t serve response for \"%s\" from cache: %O', event.request.url, e);\n                        return fetch(event.request);\n                    })\n                );\n            }\n        }\n    });\n\n\n\n\n\n\n\n\n\n/* eslint-enable */\n"]}